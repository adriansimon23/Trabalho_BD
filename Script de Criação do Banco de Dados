-- Script de Criação do Banco de Dados para Gestão de Compras, Estoque e Pedidos

CREATE TABLE localizacao_estoque (
    id_localizacao INT PRIMARY KEY,
    nome VARCHAR(100),
    telefone VARCHAR(20),
    descricao TEXT
);

CREATE TABLE requisicao_compra (
    id_requisicao INT PRIMARY KEY,
    id_localizacao INT,
    data_emissao DATE,
    estado VARCHAR(50),
    FOREIGN KEY (id_localizacao) REFERENCES localizacao_estoque(id_localizacao)
);

CREATE TABLE requisicao (
    id_requisicao INT PRIMARY KEY,
    data VARCHAR(100),
    informacoes TEXT,
    email VARCHAR(100),
    FOREIGN KEY (id_requisicao) REFERENCES requisicao_compra(id_requisicao)
);

CREATE TABLE fornecedor (
    id_fornecedor INT PRIMARY KEY,
    nome VARCHAR(100),
    telefone VARCHAR(20),
    quantidade INT,
    preco_unitario DECIMAL(8,2)
);

CREATE TABLE categoria (
    id_categoria INT PRIMARY KEY,
    nome VARCHAR(100),
    quantidade INT
);

CREATE TABLE produto (
    id_produto INT PRIMARY KEY,
    nome VARCHAR(100),
    preco DECIMAL(32,2),
    id_fornecedor INT,
    id_categoria INT,
    FOREIGN KEY (id_fornecedor) REFERENCES fornecedor(id_fornecedor),
    FOREIGN KEY (id_categoria) REFERENCES categoria(id_categoria)
);

CREATE TABLE cliente (
    id_cliente INT PRIMARY KEY,
    nome VARCHAR(100),
    telefone VARCHAR(20),
    email VARCHAR(100),
    endereco VARCHAR(100)
);

CREATE TABLE pedido (
    id_pedido INT PRIMARY KEY,
    id_cliente INT,
    data DATE,
    estado VARCHAR(50),
    FOREIGN KEY (id_cliente) REFERENCES cliente(id_cliente)
);

CREATE TABLE item_pedido (
    id_item_pedido INT PRIMARY KEY,
    id_pedido INT,
    id_produto INT,
    quantidade INT,
    preco_unitario DECIMAL(8,2),
    FOREIGN KEY (id_pedido) REFERENCES pedido(id_pedido),
    FOREIGN KEY (id_produto) REFERENCES produto(id_produto)
);

CREATE TYPE tipo_movimentacao AS ENUM ('ENTRADA', 'SAIDA');

CREATE TABLE movimentacao_estoque (
    id_movimentacao INT PRIMARY KEY,
    data DATE,
    tipo tipo_movimentacao,
    quantidade INT,
    id_estoque INT,
    FOREIGN KEY (id_estoque) REFERENCES localizacao_estoque(id_localizacao)
);
